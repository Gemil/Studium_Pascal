//
// Befreiungsaufgabe PS1 WS 2012
// Minesweeper by Gerrit Paepcke
// Erstelldatum: 9.11.2012
// Bisherige Änderungen:
//   - keine
//

unit display;

interface
  type
    Score =  RECORD
      Name: String[50]; // Name des Spielers in der Highscore
      Time: Double; // Spieldauer in sec
    END;

  procedure game(curser_x, curser_y:Byte; bomb_count,flagged_fields:Byte; time:double);
  procedure index(selected_index:Byte);
  procedure settings(selected_index, bomb_percentage:Byte);
  procedure highscore(gamescore:array of Score);
  procedure gameend(win:boolean; var gamescore:array of Score; time:double);

implementation
  uses
    Classes, SysUtils, Dos, crt, logic;

  procedure header();
  // Standart Output Header
  begin
    clrscr;
    TextColor(White);
    TextBackground(Black);
    writeln('Minesweeper by Gerrit Paepcke');
    writeln;
  end;

  procedure game(curser_x, curser_y:Byte; bomb_count,flagged_fields:Byte; time:double);
  // Anzeige des Game Screens

  var
    x,y,nearbombs : integer;
    pos_x : integer=2;
    pos_y : integer=4;
  begin
    header();
    writeln('Spielfeld: '+IntToStr((logic.CMax_X-logic.CMin_X)+1)+'x'+IntToStr((logic.CMax_Y-logic.CMin_Y)+1));
    writeln;
    gotoxy(logic.CMax_X+pos_x+3,pos_y+2);
    writeln('Bombem auf dem Spielfeld: '+IntToStr(bomb_count));

    gotoxy(logic.CMax_X+pos_x+3,pos_y+3);
    writeln('Markierte Felder (Flaggen F): '+IntToStr(flagged_fields));

    gotoxy(logic.CMax_X+pos_x+3,pos_y+4);
    writeln('Spieldauer: '+FloatToStrF(time,ffFixed,10,2)+'s');

    gotoxy(logic.CMax_X+pos_x+3,pos_y+6);
    writeln('Auswahl: Arrow Keys, Flagge setzen: Space');

    gotoxy(logic.CMax_X+pos_x+3,pos_y+7);
    writeln('Aufdecken: Enter, Zum Hauptmenu: Back / b');

    for x:=logic.CMin_X to logic.CMax_X do
    begin
      for y :=logic.CMin_Y to logic.CMax_Y do
      begin
        gotoxy(x+pos_x,y+pos_y);
        if (x = curser_x) and (y = curser_y) then
        begin
          TextColor(Black);
          TextBackground(White);
        end;

        case logic.Spielfeld[x,y] of
           fdFlagge_mBombe:
             begin
               TextColor(Green);
               write('F');
             end;
           fdFlagge_oBombe:
             begin
               TextColor(Green);
               write('F');
             end;
           fdBombe:
             begin
               TextColor(White);
               write('#');
             end;
           fdAufgedeckt:
             begin
               nearbombs := logic.countNearBombs(x,y);
               if (nearbombs = 0) then
               begin
                 TextColor(White);
                 write(' ');
               end
               else if (nearbombs = 1) then
               begin
                 TextColor(9);
                 write(nearbombs);
               end
               else if (nearbombs = 2) then
               begin
                 TextColor(10);
                 write(nearbombs);
               end
               else if (nearbombs = 3) then
               begin
                 TextColor(12);
                 write(nearbombs);
               end
               else if (nearbombs = 4) then
               begin
                 TextColor(13);
                 write(nearbombs);
               end
               else
               begin
                 TextColor(14);
                 write(nearbombs);
               end;
             end;
           fdVerborgen:
             begin
               TextColor(White);
               write('#');
             end;
        end;
        TextColor(White);
        TextBackground(Black);
      end;
    end;
    gotoxy(curser_x+pos_x,curser_y+pos_y);
  end;

  procedure index(selected_index:Byte);
  // Anzeige des Hauptmenüs

  begin
    header();
    writeln('Hauptmenu');
    writeln;
    if selected_index = 1 then
    begin
      TextColor(Black);
      TextBackground(White);
    end
    else
    begin
      TextColor(White);
      TextBackground(Black);
    end;
    writeln('Neues Spiel');
    if selected_index = 2 then
    begin
      TextColor(Black);
      TextBackground(White);
    end
    else
    begin
      TextColor(White);
      TextBackground(Black);
    end;
    writeln('Highscore anzeigen');
    if selected_index = 3 then
    begin
      TextColor(Black);
      TextBackground(White);
    end
    else
    begin
      TextColor(White);
      TextBackground(Black);
    end;
    writeln('Einstellungen');
    if selected_index = 4 then
    begin
      TextColor(Black);
      TextBackground(White);
    end
    else
    begin
      TextColor(White);
      TextBackground(Black);
    end;
    writeln('Programm schliessen');
    TextColor(White);
    TextBackground(Black);
    writeln;
    writeln;
    writeln('Steuerung: Up/Down, Auswahl: Enter');
  end;

  procedure settings(selected_index,bomb_percentage:Byte);
  // Anzeige der Einstellungen

  begin
    header();
    writeln('Einstellungen');
    writeln;
    write('Bomben pro Spielfeld:   ');
    if selected_index = 1 then
    begin
      TextColor(Black);
      TextBackground(White);
    end
    else
    begin
      TextColor(White);
      TextBackground(Black);
    end;
    writeln(IntToStr(bomb_percentage)+'%');
    TextColor(White);
    TextBackground(Black);
    writeln;
    writeln;
    writeln('Steuerung: Up/Down, Wert wechseln: Left/Right, Zum Hauptmenu: Back / b');
  end;

  procedure highscore(gamescore:array of Score);
  // Anzeige der Highscore

  var
    i : integer;
  begin
    header();
    writeln('Highscore');
    writeln;
    for i:=0 to 2 do
    begin
      writeln(IntToStr(i+1)+'. Platz: '+gamescore[i].Name+' Zeit: '+FloatToStrF(gamescore[i].Time,ffFixed,10,2)+'s');
    end;
    writeln;
    writeln;
    writeln('Zum Hauptmenu: Back / b');
  end;

  procedure gameend(win:boolean; var gamescore:array of Score; time:double);
  // Anzeige einer Spielvorbeiseite +
  // Abfrage des Names für die Highscore

  var
    name : String[50];
  begin
    header();
    if win = true then
    begin

      writeln('Gewonnen! Deine Zeit: '+FloatToStrF(time,ffFixed,10,2)+'s');
      if (round(gamescore[0].Time*100) > round(time*100)) then
      begin
        writeln;
        writeln('Du hast die Highscore geschlagen und bist nun auf Platz 1!');
        write('Gebe daher nun deinen Namen ein: ');
        readln(name);
        writeln;

        gamescore[2] := gamescore[1];
        gamescore[1] := gamescore[0];
        gamescore[0].Name := name;
        gamescore[0].Time:= time;
      end
      else if (round(gamescore[1].Time*100) > round(time*100)) then
      begin
        writeln;
        writeln('Du hast die Highscore geschlagen und bist nun auf Platz 2!');
        write('Gebe daher nun deinen Namen ein: ');
        readln(name);
        writeln;

        gamescore[2] := gamescore[1];
        gamescore[1].Name := name;
        gamescore[1].Time:= time;
      end
      else if (round(gamescore[2].Time*100) > round(time*100)) then
      begin
        writeln;
        writeln('Du hast die Highscore geschlagen und bist nun auf Platz 3!');
        write('Gebe daher nun deinen Namen ein: ');
        readln(name);
        writeln;

        gamescore[2].Name := name;
        gamescore[2].Time:= time;
      end;

      writeln('Bitte druecke Enter, um zum Hauptmenu zurueckzukehren');
      readln();
    end
    else
    begin
      writeln('Verloren! Deine Zeit: '+FloatToStrF(time,ffFixed,10,2)+'s');
      writeln;
      writeln('Bitte druecke Enter, um zum Hauptmenu zurueckzukehren');
      readln();
    end;
  end;

end.

